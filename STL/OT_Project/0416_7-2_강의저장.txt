


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:34:30
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v{ 1,2,3,4,5 };
	
	//[문제] v에서 3을 제거하고 출력하라 - C++20 부터는
	erase(v, 3);

	//너무 많이 사용하는 문법이라 이름이 붙어있다
	//erase-remove idiom
	//v.erase(remove(v.begin(), v.end(), 3), v.end());//벡터 멤버함수인 삭제 함수

	for (int num : v)
		cout << num << ' ';
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:37:21
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v = { 100 };
	

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:38:11
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	//값이 100인 int 하나 -> int 100개 벡터
	vector<int> v(100);
	
	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:38:53
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	//값이 100인 int 하나 -> int 100개 벡터
	vector<int> v(100);
	iota(v.begin(), v.end(), 1);

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:39:03
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	//값이 100인 int 하나 -> int 100개 벡터
	vector<int> v(100);
	//iota(v.begin(), v.end(), 1);

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:39:13
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	//값이 100인 int 하나 -> int 100개 벡터
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:44:18
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);
	//[문제] v에서 홀수를 제거하라.
	for (int num : v)
		if (num % 2 == 1)
			erase(v, num);


	for (int num : v)
		print("{:8}", num);


	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:44:21
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);
	//[문제] v에서 홀수를 제거하라.
	for (int num : v)
		if (num % 2 == 1)
			erase(v, num);


	for (int num : v)
		print("{:8}", num);


	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:50:41
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);
	//[문제] v에서 홀수를 제거하라.
	remove_if(v.begin(), v.end(), [](int num) {
		return num % 2;
		});

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:51:18
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);
	//[문제] v에서 홀수를 제거하라.
	v.erase(remove_if(v.begin(), v.end(), [](int num) {
		return num % 2;
		}), v.end());

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 3:53:03
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v(200);
	iota(v.begin(), v.end(), 1);
	//[문제] v에서 홀수를 제거하라.
	//v.erase(remove_if(v.begin(), v.end(), [](int num) {
	//	return num % 2;
	//	}), v.end());
	//c++20이후 더 간편해진 식
	erase_if(v, [](int num) {return num % 2; });

	for (int num : v)
		print("{:8}", num);

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:15:39
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
#include <string>
using namespace std;
extern bool 관찰;

int main()
{
	vector<String>v{ "1","2","3","4","5", "3", "33", "3 "};
	//[문제] v에서 3을 삭제하라.
	erase(v, String{ "3" });

	for (const String& s : v)
		cout << s << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:23:34
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
#include <string>
using namespace std;
extern bool 관찰;

int main()
{
	vector<String>v{ "1", "2", "4", "5" };

	//[문제] v에 3을 추가하라
	auto p = v.begin();
	++p, ++p;
	v.insert(p, "3");


	for (const String& s : v)
		cout << s << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:36:30
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// vector - dynamic array - 중간위치에서 원소 추가/삭제
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
#include <string>
#include <list>
using namespace std;
extern bool 관찰;

int main()
{
	list<String>v{ "1", "22", "4444", "55555" };

	//[문제] v에 3을 추가하라
	auto p = v.begin();
	++p, ++p;

	관찰 = true;
	v.emplace(p, "333");
	관찰 = false;

	for (const String& s : v)
		cout << s << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:41:10
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// vector - dynamic array - 중간위치에서 원소 추가/삭제
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include <print>
#include <numeric>
#include "save.h"
#include "String.h"
#include <string>
#include <list>
using namespace std;
extern bool 관찰;

int main()
{
	vector<String>v{ "1", "22", "4444", "55555" };

	//[문제] v에 3을 추가하라
	auto p = v.begin();
	++p, ++p;

	v.emplace(p, "333");

	for (const String& s : v)
		cout << s << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:49:38
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// deque 
// ----------------------------------------------------------

#include <iostream>
#include "save.h"
#include "String.h"

#include <deque>
using namespace std;
extern bool 관찰;

int main()
{
	deque<int> d{ 1,2,3,4,5,6,7 };

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;
	
	d.push_front(0);
	cout << endl;
	
	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:51:06
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// deque 
// ----------------------------------------------------------

#include <iostream>
#include "save.h"
#include "String.h"

#include <deque>
using namespace std;
extern bool 관찰;

int main()
{
	deque<int> d{ 1,2,3,4,5,6,7 };

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;
	
	d.push_front(0);
	cout << endl;
	
	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	d.push_back(8);
	cout << endl;

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 4:52:13
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// deque 
// ----------------------------------------------------------

#include <iostream>
#include "save.h"
#include "String.h"

#include <deque>
using namespace std;
extern bool 관찰;

int main()
{
	deque<int> d{ 1,2,3,4,5,6,7 };

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;
	
	d.push_front(0);
	cout << endl;
	
	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	d.push_back(8);
	cout << endl;

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	d.push_back(8);
	cout << endl;

	for (int i = 0; i < d.size(); ++i)
		cout << &d[i] << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-16 화요일 오후 5:19:15
================================================
//----------------------------------------------------------
// 2024 STL 4.16 화 (7-2주차)
//  
// 4/23 중간시험
// deque - vector와 list의 중간형태를 띄는 자료구조다.
// ----------------------------------------------------------

#include <iostream>
#include "save.h"
#include "String.h"

#include <vector>
#include <deque>
#include <list>
using namespace std;
extern bool 관찰;

class Test {
	char x[4'096];
};
int main()
{
	// vector<Test> v;//236'2204
	list<Test> v;
	while (true) {
		try{
			v.push_back(Test{});
		}
		catch (...) {
			cout << "끝 : " << v.size() << endl;
			break;
		}
		if (!(v.size() % 10'00000))
			cout << v.size() << " - Still running..." << endl;
	}
	save("STL.cpp");
}