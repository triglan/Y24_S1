


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:30:03
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	관찰 = true;

	vector<String> v;

	v.push_back("1");
	v.push_back("22");

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:35:41
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	관찰 = true;

	vector<String> v;
	cout << "원소 개수 - " << v.size() << endl;
	cout << "원소 주소 - " << v.data() << endl;
	cout << "최대 개수 - " << v.capacity() << endl;

	v.push_back("1");
	v.push_back("22");

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:36:59
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	//관찰 = true;

	vector<String> v;
	v.reserve(333);//나는 예약 333개를 하고 싶다.
	cout << "원소 개수 - " << v.size() << endl;
	cout << "원소 주소 - " << v.data() << endl;
	cout << "최대 개수 - " << v.capacity() << endl;

	v.push_back("1");
	v.push_back("22");

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:46:34
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	//관찰 = true;

	vector<String> v;
	cout << "vector<int>의 최대 개수 - " << v.max_size() << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:48:54
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	관찰 = true;
	vector<String> v;
	
	v.push_back("1");

	cout << endl << endl;
	
	v.push_back("22");

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 5:49:48
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	관찰 = true;
	vector<String> v;
	
	v.push_back("1");

	cout << endl << endl;
	
	v.push_back("22");

	cout << endl << endl;

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:09:17
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	// * noexcept 를 넣어 복사 생성이 아니라 이동생성으로 바꾸는 중 중요하다 오래 설명했다. TODO:: 
	관찰 = true;
	vector<String> v;
	
	v.push_back("1");

	cout << endl << endl;
	
	v.push_back("22");

	cout << endl << endl;
		
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:10:24
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	// * noexcept 를 넣어 복사 생성이 아니라 이동생성으로 바꾸는 중 중요하다 오래 설명했다. TODO:: 
	관찰 = true;
	vector<String> v;
	
	v.push_back("1");

	cout << endl << endl;
	
	v.push_back("22");

	cout << endl << endl;
		
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:40:45
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
#include <fstream>
#include <vector>
#include <array>
using namespace std;
extern bool 관찰;

int main()
{			
	// [문제] "STL.cpp" 에 있는 알파벳 소문자의 출현 횟수를 다음과 같이 적는다
	// a - 20
	// b - 3
	// c - 1
	// ...
	// z - 2
	
	ifstream in{ "STL.cpp" };
	if (not in)
		return 0;

	array<int, 26> a{};//배열을 쓰고 싶으면 이걸 써야지

	char c;
	while (in >> c)//이거 이상 간단하고 좋은 코드가 없다 글자를 읽는 것
		if (islower(c))
			a[c - 'a']++;

	for (int i = 0; i < a.size(); ++i)
		cout << '\t' << static_cast<char>('a' + i) << " - " << a[i] << endl;
	//zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:40:53
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
#include <fstream>
#include <vector>
#include <array>
using namespace std;
extern bool 관찰;

int main()
{			
	// [문제] "STL.cpp" 에 있는 알파벳 소문자의 출현 횟수를 다음과 같이 적는다
	// a - 20
	// b - 3
	// c - 1
	// ...
	// z - 2
	
	ifstream in{ "STL.cpp" };
	if (not in)
		return 0;

	array<int, 26> a{};//배열을 쓰고 싶으면 이걸 써야지

	char c;
	while (in >> c)//이거 이상 간단하고 좋은 코드가 없다 글자를 읽는 것
		if (islower(c))
			a[c - 'a']++;

	for (int i = 0; i < a.size(); ++i)
		cout << '\t' << static_cast<char>('a' + i) << " - " << a[i] << endl;
	//zzzZZZZZZZZZZZZZZZZZZZzz

	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:41:55
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
#include <fstream>
#include <vector>
#include <array>
using namespace std;
extern bool 관찰;

int main()
{			
	// [문제] "STL.cpp" 에 있는 알파벳 소문자의 출현 횟수를 다음과 같이 적는다
	
	ifstream in{ "STL.cpp" };
	if (not in)
		return 0;

	vector<int> a(26);//벡터를 쓰고 싶으면 똑같다 array랑

	char c;
	while (in >> c)//이거 이상 간단하고 좋은 코드가 없다 글자를 읽는 것
		if (islower(c))
			a[c - 'a']++;

	for (int i = 0; i < a.size(); ++i)
		cout << '\t' << static_cast<char>('a' + i) << " - " << a[i] << endl;
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:44:35
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{			
	vector<int> v{ 1,2,3,4,5 };

	for (int num : {1, 3, 5, 7, 9})
		cout << num << endl;
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 6:50:24
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v{ 1,2,3,4,5 };
	
	//[문제] v에서 3을 제거하고 출력하라

	remove(v.begin(), v.end(), 3);

	for (int num : v)
		cout << num << ' ';
	save("STL.cpp");
}


================================================
STL.cpp, 저장시간: 2024-04-15 월요일 오후 7:03:38
================================================
//----------------------------------------------------------
// 2024 STL 4.15 화 (7-1주차)
//  
// 4/23 중간시험
// ----------------------------------------------------------

#include <iostream>
#include <vector>
#include "save.h"
#include "String.h"
using namespace std;
extern bool 관찰;

int main()
{
	vector<int> v{ 1,2,3,4,5,5,3,4,3,33 };
	
	//[문제] v에서 3을 제거하고 출력하라
	//너무 많이 사용하는 문법이라 이름이 붙어있다
	//erase-remove idiom
	v.erase(remove(v.begin(), v.end(), 3), v.end());//벡터 멤버함수인 삭제 함수

	for (int num : v)
		cout << num << ' ';
	save("STL.cpp");
}